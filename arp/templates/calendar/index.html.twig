{% extends 'base.html.twig' %}

{% block title %}Planning de Rendez-vous{% endblock %}

{% block stylesheets %}
{{ parent() }}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/flatpickr.min.css">
<style>
.rdv-selection-panel {
    background: #f8f9fa;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
}

.rdv-card {
    border: 1px solid #dee2e6;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
    background: white;
}

.booking-form {
    margin-top: 15px;
    padding: 15px;
    border: 1px solid #007bff;
    border-radius: 8px;
    background: #f8f9fa;
}

.flatpickr-input {
    background: white !important;
    border: 1px solid #ced4da;
    padding: 8px 12px;
    border-radius: 4px;
    width: 100%;
}

.conflict-warning {
    color: #dc3545;
    font-size: 0.875em;
    margin-top: 5px;
}

#date-time-display {
    padding: 10px;
    background: #e9ecef;
    border-radius: 4px;
    margin: 10px 0;
    font-weight: bold;
}

.anonymous-info {
    background: #e7f3ff;
    border: 1px solid #b3d9ff;
    border-radius: 4px;
    padding: 10px;
    margin-bottom: 15px;
    font-size: 0.9em;
}
</style>
{% endblock %}

{% block body %}
    <div class="container d-flex flex-column justify-content-start align-items-center">
        <h1>Planning de rendez-vous</h1>
        <h6 class="text-muted">R√©servation anonyme et confidentielle</h6>
    </div>
    
 
    <div class="container">
        <div class="row">  
            <div class="col-md-8 col-sm-12">
                <div class="calendar">
                    <div
                        id="calendar-holder"
                        data-events-url="{{ path('fc_load_events') }}"
                    ></div>
                </div>
            </div>
            
            <div class="col-md-4 col-sm-12">
                <div class="rdv-selection-panel">
                    <h4>R√©server un rendez-vous</h4>
                    
                    <div class="anonymous-info">
                        <i class="fas fa-user-secret"></i>
                        <strong>Confidentialit√©:</strong> Seul un nom ou pseudonyme est requis. 
                        Votre anonymat est pr√©serv√©.
                    </div>
                    
                    <div class="rdv-card">
                        <h5>{{ rdv.name }}</h5>
                        <p class="text-muted mb-1">Dur√©e: {{ rdv.duration }} minutes</p>
                        <p class="text-muted mb-0">Prix: {{ rdv.price }}‚Ç¨</p>
                        
                        <div class="booking-form">
                            {{ form_start(form, {
                                'attr': {
                                    'class': 'rdv-booking-form', 
                                    'action': path('calendar')
                                }
                            }) }}
                            
                            <div class="mb-3">
                                {{ form_label(form.clientSurname) }}
                                {{ form_widget(form.clientSurname) }}
                                {{ form_errors(form.clientSurname) }}
                                <small class="form-text text-muted">
                                    Utilisez votre nom ou un pseudonyme pour identifier votre rendez-vous
                                </small>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label">S√©lectionnez la date et l'heure</label>
                                <button type="button" id="date-picker-btn" class="btn btn-outline-primary w-100">
                                    üìÖ Choisir une date et heure
                                </button>
                                
                                {{ form_widget(form.beginAt, {
                                    'attr': {
                                        'style': 'display: none;',
                                        'data-rdv-duration': rdv.duration
                                    }
                                }) }}
                                
                                <div id="date-time-display" style="display: none;">
                                    Date s√©lectionn√©e: <span id="selected-datetime"></span>
                                </div>
                                
                                <div class="conflict-warning" id="conflict-warning" style="display: none;"></div>
                            </div>
                            
                            <button type="submit" id="submit-btn" class="btn btn-primary w-100" disabled>
                                R√©server ce rendez-vous
                            </button>
                            
                            {{ form_end(form) }}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>    
{% endblock %}

{% block javascripts_head %}
{{ parent() }}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/flatpickr.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/flatpickr.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.6.13/l10n/fr.js"></script>

<script>
console.log('Calendar script loading...');

document.addEventListener('turbo:load', function() {
    console.log('Turbo load fired');
    
    // Check if user already has a booking in localStorage
    checkExistingBooking();
    
    setTimeout(function() {
        console.log('Looking for elements...');
        
        const btn = document.getElementById('date-picker-btn');
        const dateInput = document.querySelector('.flatpickr-datetime') || 
                         document.getElementById('buy_rdv_beginAt') ||
                         document.querySelector('input[name*="beginAt"]');
        
        console.log('Elements found:', {
            btn: !!btn,
            dateInput: !!dateInput,
            flatpickr: typeof flatpickr
        });
        
        if (btn && dateInput) {
            setupFlatpickr(btn, dateInput);
            setupFormSubmission();
        }
    }, 1000);
});

function checkExistingBooking() {
    const existingBooking = localStorage.getItem('rdv_booking_token');
    if (existingBooking) {
        const bookingData = JSON.parse(existingBooking);
        const bookingDate = new Date(bookingData.date);
        const now = new Date();
        
        // Check if booking is still valid (in the future)
        if (bookingDate > now) {
            showExistingBookingAlert(bookingData);
        } else {
            // Remove expired booking
            localStorage.removeItem('rdv_booking_token');
        }
    }
}

function showExistingBookingAlert(bookingData) {
    const alertDiv = document.createElement('div');
    alertDiv.className = 'alert alert-info alert-dismissible fade show';
    alertDiv.innerHTML = `
        <i class="fas fa-info-circle"></i>
        <strong>R√©servation existante:</strong> 
        Vous avez d√©j√† un rendez-vous pr√©vu le ${new Date(bookingData.date).toLocaleString('fr-FR')}.
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    const container = document.querySelector('.container');
    container.insertBefore(alertDiv, container.firstChild);
}

function setupFlatpickr(btn, dateInput) {
    console.log('Setting up Flatpickr...');
    
    btn.addEventListener('click', function(e) {
        e.preventDefault();
        console.log('Button clicked!');
        
        try {
            const fp = flatpickr(dateInput, {
                enableTime: true,
                dateFormat: 'Y-m-d H:i',
                time_24hr: true,
                locale: 'fr',
                defaultHour: 9,
                minDate: new Date(),
                minuteIncrement: 15,
                position: 'above',
                positionElement: btn,
                
                disable: [
                    function(date) {
                        return date.getDay() === 0; // Disable Sundays
                    }
                ],
                
                onChange: function(selectedDates, dateStr) {
                    console.log('Date changed:', dateStr);
                    if (selectedDates.length > 0) {
                        const selectedDate = selectedDates[0];
                        const formattedDate = selectedDate.toLocaleDateString('fr-FR', {
                            weekday: 'long',
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric',
                            hour: '2-digit',
                            minute: '2-digit'
                        });
                        
                        document.getElementById('selected-datetime').textContent = formattedDate;
                        document.getElementById('date-time-display').style.display = 'block';
                        btn.textContent = 'üìÖ Modifier la date et heure';
                        btn.className = 'btn btn-success w-100';
                        
                        const submitBtn = document.getElementById('submit-btn');
                        const surnameInput = document.querySelector('input[name*="clientSurname"]');
                        
                        // Enable submit button only if surname is also filled
                        if (submitBtn && surnameInput && surnameInput.value.trim()) {
                            submitBtn.disabled = false;
                        }
                        
                        checkTimeConflicts(selectedDate);
                    }
                }
            });
            
            fp.open();
        } catch (error) {
            console.error('Flatpickr error:', error);
            alert('Erreur lors de l\'ouverture du calendrier: ' + error.message);
        }
    });
}

function setupFormSubmission() {
    const form = document.querySelector('.ajax-form');
    const surnameInput = document.querySelector('input[name*="clientSurname"]');
    const submitBtn = document.getElementById('submit-btn');
    
    // Enable/disable submit button based on form completion
    if (surnameInput) {
        surnameInput.addEventListener('input', function() {
            const dateSelected = document.getElementById('date-time-display').style.display !== 'none';
            const surnameEntered = this.value.trim().length > 0;
            
            if (submitBtn) {
                submitBtn.disabled = !(dateSelected && surnameEntered);
            }
        });
    }
    
    // Remove the form submission event handler completely
    // Let the form submit normally with standard HTML form submission
    // The controller will handle the redirect to booking_summary
}

function checkTimeConflicts(selectedDate) {
    const conflictWarning = document.getElementById('conflict-warning');
    const rdvDuration = {{ rdv.duration }};
    
    fetch('/calendar/check-conflicts', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
        },
        body: JSON.stringify({
            beginAt: selectedDate.toISOString(),
            duration: rdvDuration
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.hasConflicts && conflictWarning) {
            conflictWarning.textContent = 'Attention: Ce cr√©neau est d√©j√† occup√©.';
            conflictWarning.style.display = 'block';
        } else if (conflictWarning) {
            conflictWarning.style.display = 'none';
        }
    })
    .catch(error => {
        console.error('Erreur lors de la v√©rification des conflits:', error);
        if (conflictWarning) {
            conflictWarning.style.display = 'none';
        }
    });
}
</script>
{% endblock %}

{# Remove the javascripts block completely or make it empty #}
{% block javascripts %}
{{ parent() }}
{% endblock %}